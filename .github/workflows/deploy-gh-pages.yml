# GitHub Actions workflow to build Nuxt 3 static site and deploy to gh-pages
# - Builds with `npm run generate` (uses `nuxt generate` from package.json)
# - Detects generated publish directory (`dist` or `.output/public`)
# - Copies the TF maps from `assets/tf` into the publish root as `tf/`
# - Copies the JS files from `assets/js` into the publish root as `js/`
# - Deploys the assembled `deploy/` directory to the `gh-pages` branch

name: Deploy to GitHub Pages

permissions:
  contents: write

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund
        env:
          # Force rebuild of native modules for the current platform
          npm_config_build_from_source: true

      - name: Generate static site
        run: npm run generate

      - name: Prepare publish directory and copy assets
        run: |
          set -euo pipefail
          
          PUBLISH_SRC=""
          if [ -d "dist" ]; then
            PUBLISH_SRC="dist"
          elif [ -d ".output/public" ]; then
            PUBLISH_SRC=".output/public"
          else
            echo "No publish directory found (checked 'dist' and '.output/public')." >&2
            ls -la
            exit 1
          fi
          
          echo "Using publish source: $PUBLISH_SRC"
          
          rm -rf deploy
          mkdir -p deploy
          
          # Copy the generated site into deploy
          cp -a "$PUBLISH_SRC/." deploy/
          
          # Copy maps from assets/tf into deploy/tf so they are available at /db-fastdl/tf/*
          if [ -d "assets/tf" ]; then
            mkdir -p deploy/tf
            cp -a assets/tf/. deploy/tf/
            echo "Copied assets/tf -> deploy/tf"
          else
            echo "No assets/tf directory found; skipping TF map copy"
          fi
          
          # Copy files from assets/js into deploy/js so they are available at /db-fastdl/js/*
          if [ -d "assets/js" ]; then
            mkdir -p deploy/js
            cp -a assets/js/. deploy/js/
            echo "Copied assets/js -> deploy/js"
          else
            echo "No assets/js directory found; skipping JS file copy"
          fi

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          publish_branch: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Notes for usage:
# - This workflow expects your default branch is named `master`. Adjust the `on.push.branches` value if different.
# - It will publish to the `gh-pages` branch. Configure GitHub Pages in the repository settings to serve from that branch.
# - If you want the action to push commits as a specific user or keep a full commit history, you can create and add
#   an SSH Deploy Key as `ACTIONS_DEPLOY_KEY` in the repository secrets; otherwise the action falls back to using GITHUB_TOKEN.